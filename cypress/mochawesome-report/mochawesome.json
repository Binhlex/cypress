{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-14T16:41:01.991Z",
    "end": "2021-08-14T16:41:03.276Z",
    "duration": 1285,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "41bd0609-862b-476d-85c1-0be23c68a522",
      "title": "",
      "fullFile": "cypress/integration/api/gorest-api/users.spec.js",
      "file": "cypress/integration/api/gorest-api/users.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d05f9142-d7a5-4335-8e89-063074d832d2",
          "title": "API tests for user endpoint",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "baa29b79-3eba-4082-8f47-bab4e19cc64d",
              "title": "Create a new user tests",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new user successfully",
                  "fullTitle": "API tests for user endpoint Create a new user tests Create a new user successfully",
                  "timedOut": null,
                  "duration": 1250,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: '/public-api/users',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer ' + accessToken\n  },\n  body: requestBody\n}).then(function (res) {\n  expect(res.status).equal(200);\n  expect(res.body.code).equal(201);\n  expect(res.body.data.id).is.not[\"null\"];\n  expect(res.body.data.name).equal(requestBody.name);\n  expect(res.body.data.email).equal(requestBody.email);\n  expect(res.body.data.gender).equal(requestBody.gender.toLowerCase());\n  expect(res.body.data.status).equal(requestBody.status.toLowerCase());\n});",
                  "err": {},
                  "uuid": "21dd9cd2-92ac-4b09-b1bc-037abedd03ea",
                  "parentUUID": "baa29b79-3eba-4082-8f47-bab4e19cc64d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "21dd9cd2-92ac-4b09-b1bc-037abedd03ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1250,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/mochawesome-report",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}